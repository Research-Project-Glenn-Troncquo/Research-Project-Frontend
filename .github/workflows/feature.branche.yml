name: Filter Modules Workflow

on:
  push:
    branches: [feature/**]
  pull_request:
    branches: [feature/**]

jobs:
  filter_modules:
    name: Filter Modules with testing errors
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js 14.15
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - name: Setup
        run: npm ci

      - name: Set CURRENT_BRANCH
        run: echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Set PARENT_BRANCH
        run: echo "PARENT_BRANCH=develop" >> $GITHUB_ENV

      - name: Set TIMESTAMP
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      - name: Set NEW_BRANCH
        run: echo "NEW_BRANCH=${CURRENT_BRANCH}_SUCCESS_${TIMESTAMP}" >> $GITHUB_ENV

      - name: Script that filters the Modules with testing errors
        run: .github/scripts/filter_modules.sh

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'do_pr.txt'

      - name: echo do_pr.txt
        if: steps.check_files.outputs.files_exists == 'true'
        run: echo "ISSUE_DESCRIPTION=$(cat do_pr.txt)" >> $GITHUB_ENV

      - name: debug
        run: echo $GITHUB_ENV

      - name: echo do_pr.txt
        if: steps.check_files.outputs.files_exists == 'true'
        run: cat do_pr.txt

      - name: Debug ISSUE_DESCRIPTION
        run: echo "${{ secrets.ISSUE_DESCRIPTION }}"

      # - name: Make Issue if file exists
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   uses: JasonEtco/create-an-issue@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: make issue
        uses: rishabhgupta/git-action-issue@v2
        id: Issue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Title
          body: body
          assignees: 'rishabhgupta'
    

      - name: Create PR title
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "PR_TITLE=[ $NEW_BRANCH ] Modules that passes in all tests" >> $GITHUB_ENV
          rm do_pr.txt

      - name: Debug NEW_BRANCH
        run: echo ${{ env.PR_TITLE }}

      - name: pull-request-action
        if: steps.check_files.outputs.files_exists == 'true'
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_FROM_BRANCH: ${{ env.NEW_BRANCH }}
          PULL_REQUEST_BRANCH: ${{ env.PARENT_BRANCH }}
          PULL_REQUEST_TITLE: ${{ env.PR_TITLE }}
